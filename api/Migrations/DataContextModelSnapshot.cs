// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("api.Entities.MeasurementEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Chest")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Height")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Hip")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LeftArm")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LeftCalve")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LeftForearm")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LeftThight")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RightArm")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RightCalve")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RightForearm")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RightThigh")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Shoulders")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameCreator")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameLastChange")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Waist")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Wheight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("MeasurementEntries");
                });

            modelBuilder.Entity("api.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameCreator")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNameLastChange")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("api.Entities.MeasurementEntry", b =>
                {
                    b.HasOne("api.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
